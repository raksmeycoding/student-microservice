plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group 'org.example'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


tasks.named('test') {
    useJUnitPlatform()
}


// configuration
// custom configuration

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    group 'org.example'
    version '1.0-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
//		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
//		runtimeOnly 'org.postgresql:postgresql'

    }


    tasks.register("hello") {
        doLast {
            println("I'm from $project.name)")
        }
    }

}


allprojects {
    if (project.name.startsWith("student-service") || project.name.startsWith("course-service")) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-webflux'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            runtimeOnly 'org.postgresql:postgresql'


        }
    }
}

